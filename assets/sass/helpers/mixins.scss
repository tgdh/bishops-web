// ===========================================================
//
//	$MIXINS
//
// ===========================================================

$column-width: 60px;
$gutter-width: 20px;
$columns: 14;

@function gridsystem-width($columns:$columns) {
	@return ($column-width * $columns) + ($gutter-width * $columns);
}
$total-width: 100%;

@mixin column($x,$columns:$columns) {
	display: inline;
	float: left;
	width: $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns));
	margin: 0 $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}
@mixin push($offset:1) {
	margin-left: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}
@mixin pull($offset:1) {
	margin-right: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}

@mixin heading-font-size( $font-size ) {
	font-size: $font-size;
	font-weight: bold;
	line-height: 1.1;
	padding-bottom: $font-size / 2;
}

@mixin clearfix() {
	&:before,
	&:after {
	    content:"";
	    display:table;
	}
	&:after {
	    clear:both;
	}
}

.clearfix {
	@include clearfix;
}

@mixin respond-min( $width ) {
	@media only screen and ( min-width: $width ) {
		@content;
	}
}

@mixin respond-max( $width ) {
	@media only screen and ( max-width: $width - 0.01em) {
		@content;
	}
}

@mixin respond-min-max( $min, $max ) {
	@media only screen and ( min-width: $min ) and ( max-width: $max - 0.01em ) {
		@content;
	}
}
